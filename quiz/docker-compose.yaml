services:
  web:
    build:
      context: ../
      dockerfile: quiz/web/Dockerfile
      target: development
    restart: on-failure
    working_dir: /project
    networks:
      - quiz_web_network
    ports:
      - "3000:3000"
    volumes:
      - ../bank/:/project/bank/
      - ../quiz/:/project/quiz/
      - ../.eslintignore:/project/.eslintignore
      - ../.eslintrc.json:/project/.eslintrc.json
      - ../.prettierrc.json:/project/.prettierrc.json
      - ../package.json:/project/package.json
      - ../package-lock.json:/project/package-lock.json
      - ../tsconfig.json:/project/tsconfig.json
      - /project/quiz/mobile/
    env_file:
      - envs/web.env
    environment:
      - VITE_PORT=3000
    command: npm run -w quiz/web dev
    stdin_open: true
    tty: true

  proxy:
    build:
      context: ./proxy
    restart: on-failure
    networks:
      - quiz_web_network
      - quiz_backend_network
    depends_on:
      - web
      - backend
    ports:
      - "80:80"
    volumes:
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/media:/app/media

  backend:
    build:
      context: ./backend
      target: development
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./envs/backend.env
      - ./envs/postgres.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    restart: on-failure
    volumes:
      - ./backend:/app
    networks:
      - quiz_backend_network
      - quiz_postgres_network

  postgres:
    image: postgres:15.1
    volumes:
      - backend_quiz_db_volume:/var/lib/postgresql/data
    env_file:
      - envs/postgres.env
    ports:
      - "5432:5432"
    networks:
      - quiz_postgres_network

volumes:
  backend_quiz_db_volume:
  node_modules:

networks:
  quiz_postgres_network:
    driver: bridge
  quiz_backend_network:
    driver: bridge
  quiz_web_network:
    driver: bridge

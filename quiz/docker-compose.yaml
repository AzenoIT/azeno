services:
  quiz_web:
    image: node:18.14.2-slim
    restart: on-failure
    working_dir: /app
    networks:
      - quiz_web_network
    ports:
      - "3000:3000"
    volumes:
      - ./web:/app
    env_file:
      - envs/web.env
    command: /bin/bash -c "npm ci && npm run dev"
    stdin_open: true
    tty: true

  quiz_proxy:
    build:
      context: ./proxy
    restart: on-failure
    networks:
      - quiz_web_network
      - quiz_backend_network
    depends_on:
      - quiz_web
      - quiz_backend
    ports:
      - "80:80"
    volumes:
      - ./backend/staticfiles:/app/staticfiles

  quiz_backend:
    build:
        context: ./backend
        target: development
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./envs/backend.env
      - ./envs/postgres.env
    ports:
      - "8000:8000"
    depends_on:
      - quiz_postgres
    restart: on-failure
    volumes:
      - ./backend:/app
    networks:
      - quiz_backend_network
      - quiz_postgres_network


  quiz_postgres:
    image: postgres:15.1
    volumes:
      - backend_quiz_db_volume:/var/lib/postgresql/data
    env_file:
      - envs/postgres.env
    ports:
      - "5432:5432"
    networks:
      - quiz_postgres_network

volumes:
  backend_quiz_db_volume:

networks:
  quiz_postgres_network:
    driver: bridge
  quiz_backend_network:
    driver: bridge
  quiz_web_network:
    driver: bridge

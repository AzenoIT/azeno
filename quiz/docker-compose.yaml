services:
  web:
    image: node:18.14.2-slim
    restart: on-failure
    working_dir: /app
    networks:
      - proxy-web
    ports:
      - "3000:3000"
    volumes:
      - ./web:/app
    env_file:
      - envs/web.env
    command: /bin/bash -c "npm ci && npm run dev"
    stdin_open: true

  proxy:
    build:
      context: ./proxy
    restart: on-failure
    networks:
      - proxy-web
      - backend_network
    depends_on:
      - web
      - backend_quiz
    ports:
      - "80:80"
    volumes:
      - ./backend/staticfiles:/app/staticfiles

  backend_quiz:
    build:
        context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - ./backend/.envs/.env
      - envs/.db.env
    ports:
      - 8000:8000
    depends_on:
      - backend_db
    restart: on-failure
    volumes:
      - ./backend:/app
    networks:
      - backend_network
      - backend_db_network


  backend_db:
    image: postgres:15.1
    volumes:
      - backend_db_volume:/var/lib/postgres/data/
    env_file:
      - envs/.db.env
    ports:
      - 5432:5432
    networks:
      - backend_db_network

volumes:
  backend_db_volume:

networks:
  backend_db_network:
    driver: bridge
  backend_network:
    driver: bridge
  proxy-web:
    driver: bridge

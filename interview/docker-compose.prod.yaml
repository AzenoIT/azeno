services:
  interview_web:
    build:
      context: ./web
    restart: on-failure
    networks:
      - interview_web_network
    env_file:
      - envs/web.env

  interview_proxy:
    build:
      context: ./proxy
    restart: on-failure
    networks:
      - interview_web_network
      - interview_backend_network
    depends_on:
      - interview_web
      - interview_backend
    ports:
      - "80:80"
    volumes:
      - interview_static_volume:/app/staticfiles

  interview_backend:
    build:
      context: ./backend
      target: prod
    env_file:
      - ./envs/backend.env
      - ./envs/postgres.env
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    restart: on-failure
    depends_on:
      - interview_postgres
    networks:
      - interview_backend_network
      - interview_postgres_network
    volumes:
      - interview_static_volume:/app/staticfiles

  interview_postgres:
    image: postgres:15.1
    volumes:
      - interview_postgres_volume:/var/lib/postgresql/data
    env_file:
      - envs/postgres.env
    networks:
      - interview_postgres_network

volumes:
  interview_postgres_volume:
  interview_static_volume:

networks:
  interview_postgres_network:
    driver: bridge
  interview_backend_network:
    driver: bridge
  interview_web_network:
    driver: bridge
